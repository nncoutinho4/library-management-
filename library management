import tkinter as tk
from tkinter import messagebox, simpledialog

class LibraryManagementSystem:
    def __init__(self, root):
        self.root = root
        self.root.title("Library Management System")
        self.books = []

        self.title_label = tk.Label(root, text="Title")
        self.title_label.grid(row=0, column=0)
        self.title_entry = tk.Entry(root)
        self.title_entry.grid(row=0, column=1)

        self.author_label = tk.Label(root, text="Author")
        self.author_label.grid(row=1, column=0)
        self.author_entry = tk.Entry(root)
        self.author_entry.grid(row=1, column=1)

        self.year_label = tk.Label(root, text="Year")
        self.year_label.grid(row=2, column=0)
        self.year_entry = tk.Entry(root)
        self.year_entry.grid(row=2, column=1)

        self.add_button = tk.Button(root, text="Add Book", command=self.add_book)
        self.add_button.grid(row=3, column=0)

        self.remove_button = tk.Button(root, text="Remove Book", command=self.remove_book)
        self.remove_button.grid(row=3, column=1)

        self.update_button = tk.Button(root, text="Update Book", command=self.update_book)
        self.update_button.grid(row=3, column=2)

        self.search_button = tk.Button(root, text="Search Book", command=self.search_book)
        self.search_button.grid(row=3, column=3)

        self.books_listbox = tk.Listbox(root)
        self.books_listbox.grid(row=4, column=0, columnspan=4)

    def add_book(self):
        title = self.title_entry.get()
        author = self.author_entry.get()
        year = self.year_entry.get()
        if title and author and year:
            self.books.append({"title": title, "author": author, "year": year})
            self.update_books_listbox()
        else:
            messagebox.showwarning("Input Error", "All fields are required")

    def remove_book(self):
        selected_book_index = self.books_listbox.curselection()
        if selected_book_index:
            self.books.pop(selected_book_index[0])
            self.update_books_listbox()
        else:
            messagebox.showwarning("Selection Error", "No book selected")

    def update_book(self):
        selected_book_index = self.books_listbox.curselection()
        if selected_book_index:
            title = self.title_entry.get()
            author = self.author_entry.get()
            year = self.year_entry.get()
            if title and author and year:
                self.books[selected_book_index[0]] = {"title": title, "author": author, "year": year}
                self.update_books_listbox()
            else:
                messagebox.showwarning("Input Error", "All fields are required")
        else:
            messagebox.showwarning("Selection Error", "No book selected")

    def search_book(self):
        search_term = simpledialog.askstring("Search Book", "Enter title or author")
        if search_term:
            results = [book for book in self.books if search_term.lower() in book["title"].lower() or search_term.lower() in book["author"].lower()]
            self.books_listbox.delete(0, tk.END)
            for book in results:
                self.books_listbox.insert(tk.END, f"{book['title']} by {book['author']} ({book['year']})")
        else:
            messagebox.showwarning("Input Error", "Search term is required")

    def update_books_listbox(self):
        self.books_listbox.delete(0, tk.END)
        for book in self.books:
            self.books_listbox.insert(tk.END, f"{book['title']} by {book['author']} ({book['year']})")

if __name__ == "__main__":
    root = tk.Tk()
    app = LibraryManagementSystem(root)
    root.mainloop()
